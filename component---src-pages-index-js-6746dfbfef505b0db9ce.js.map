{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/pages/index.js"],"names":["Bio","style","display","marginBottom","BlogIndex","props","data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","useEffect","document","body","backgroundImage","location","padding","map","correctIndicator","node","frontmatter","fields","slug","getPersistedAnswer","selectedAnswer","correctAnswer","color","className","key","boxShadow","to","pageQuery"],"mappings":"6HAmBeA,G,OAhBH,WACV,OACE,yBACEC,MAAO,CACLC,QAAQ,OACRC,aAAc,SAGhB,6F,gCCXN,0CAiEeC,UAxDG,SAAAC,GAAU,IAClBC,EAASD,EAATC,KACFC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,kBAAkBC,MAMrC,OAJAC,qBAAU,WACRC,SAASC,KAAKf,MAAMgB,gBAAkB,OACrC,IAGD,kBAAC,IAAD,CAAQC,SAAUb,EAAMa,SAAUR,MAAOH,GACvC,kBAAC,EAAD,MACA,wBAAIN,MAAO,CAAEkB,QAAS,WACnBR,EAAMS,KAAI,YAAe,IAOpBC,EAPQC,EAAW,EAAXA,KACNZ,EACJY,EAAKC,YAAYb,OAASY,EAAKE,OAAOC,KAFjB,EAMnBC,YAAmBhB,GAFrBiB,EAJqB,EAIrBA,eACAC,EALqB,EAKrBA,cAeF,OAZuB,OAAnBD,IACFN,EACEO,IAAkBD,EAChB,0BAAM1B,MAAO,CAAE4B,MAAO,UACpB,uBAAGC,UAAU,uBAGf,0BAAM7B,MAAO,CAAE4B,MAAO,QACpB,uBAAGC,UAAU,wBAKnB,wBAAIC,IAAKT,EAAKE,OAAOC,MACnB,iCACE,gCACE,kBAAC,OAAD,CACExB,MAAO,CACL+B,UAAU,QAEZC,GAAIX,EAAKE,OAAOC,MAEff,GACK,IACPW,WA7CnB,IA0Daa,EAAS","file":"component---src-pages-index-js-6746dfbfef505b0db9ce.js","sourcesContent":["import React from 'react';\nimport './bio.css';\n\nconst Bio = () => {\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: '30px'\n      }}\n    >\n      <p>\n        Learn css fundamentals through fun and challenging\n        quizzes!\n      </p>\n    </div>\n  );\n};\n\nexport default Bio;\n","import React, { useEffect } from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport { getPersistedAnswer } from '../utils/persistAnswers';\nimport 'semantic-ui-css/semantic.css';\nimport './index.css';\n\nconst BlogIndex = props => {\n  const { data } = props;\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.edges;\n\n  useEffect(() => {\n    document.body.style.backgroundImage = null;\n  }, []);\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <Bio />\n      <ol style={{ padding: '0 16px' }}>\n        {posts.map(({ node }) => {\n          const title =\n            node.frontmatter.title || node.fields.slug;\n          const {\n            selectedAnswer,\n            correctAnswer\n          } = getPersistedAnswer(title);\n          let correctIndicator;\n          if (selectedAnswer !== null) {\n            correctIndicator =\n              correctAnswer === selectedAnswer ? (\n                <span style={{ color: 'green' }}>\n                  <i className=\"check circle icon\"></i>\n                </span>\n              ) : (\n                <span style={{ color: 'red' }}>\n                  <i className=\"times circle icon\"></i>\n                </span>\n              );\n          }\n          return (\n            <li key={node.fields.slug}>\n              <article>\n                <header>\n                  <Link\n                    style={{\n                      boxShadow: `none`\n                    }}\n                    to={node.fields.slug}\n                  >\n                    {title}\n                  </Link>{' '}\n                  {correctIndicator}\n                </header>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___order], order: ASC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}